Index: app/src/main/java/com/dou361/jjdxm_ijkplayer/remotecontrol/RemoteControl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.dou361.jjdxm_ijkplayer.remotecontrol;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.app.Activity;\r\nimport android.app.AlertDialog;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.content.res.AssetManager;\r\nimport android.content.res.Configuration;\r\nimport android.graphics.Color;\r\nimport android.os.Bundle;\r\nimport android.os.CountDownTimer;\r\nimport android.os.Environment;\r\nimport android.os.Handler;\r\nimport android.os.Message;\r\nimport android.os.PowerManager;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.MotionEvent;\r\nimport android.view.View;\r\nimport android.widget.AdapterView;\r\nimport android.widget.Button;\r\nimport android.widget.ImageButton;\r\nimport android.widget.ImageView;\r\nimport android.widget.Spinner;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.activity.OnBackPressedCallback;\r\n\r\nimport com.alibaba.fastjson.JSON;\r\nimport com.bumptech.glide.Glide;\r\nimport com.dou361.ijkplayer.bean.VideoijkBean;\r\nimport com.dou361.ijkplayer.listener.OnPlayerBackListener;\r\nimport com.dou361.ijkplayer.listener.OnPlayerStartOrPauseListener;\r\nimport com.dou361.ijkplayer.listener.OnShowThumbnailListener;\r\nimport com.dou361.ijkplayer.widget.PlayStateParams;\r\nimport com.dou361.ijkplayer.widget.PlayerView;\r\nimport com.dou361.jjdxm_ijkplayer.MainActivity;\r\nimport com.dou361.jjdxm_ijkplayer.R;\r\nimport com.dou361.jjdxm_ijkplayer.command.Control;\r\nimport com.dou361.jjdxm_ijkplayer.command.Gears;\r\nimport com.dou361.jjdxm_ijkplayer.command.Handbrake;\r\nimport com.dou361.jjdxm_ijkplayer.command.Video;\r\nimport com.dou361.jjdxm_ijkplayer.mqtt.MQTTRequest;\r\nimport com.dou361.jjdxm_ijkplayer.mqtt.MQTTSample;\r\nimport com.dou361.jjdxm_ijkplayer.service.NtpTime;\r\nimport com.dou361.jjdxm_ijkplayer.videomonitoring.VideoMonitor;\r\nimport com.dou361.jjdxm_ijkplayer.videomonitoring.VideoReply;\r\nimport com.dou361.jjdxm_ijkplayer.videomonitoring.utlis.MediaUtils;\r\nimport com.tencent.iot.hub.device.android.core.log.TXMqttLogCallBack;\r\nimport com.tencent.iot.hub.device.android.core.util.TXLog;\r\nimport com.tencent.iot.hub.device.java.core.common.Status;\r\nimport com.tencent.iot.hub.device.java.core.mqtt.TXMqttActionCallBack;\r\n\r\n\r\nimport org.eclipse.paho.client.mqttv3.IMqttToken;\r\nimport org.eclipse.paho.client.mqttv3.MqttMessage;\r\n\r\nimport java.io.BufferedReader;\r\nimport java.io.BufferedWriter;\r\nimport java.io.ByteArrayInputStream;\r\nimport java.io.File;\r\nimport java.io.FileReader;\r\nimport java.io.FileWriter;\r\nimport java.io.IOException;\r\nimport java.io.InputStreamReader;\r\nimport java.nio.charset.Charset;\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.List;\r\n\r\nimport static android.os.SystemClock.uptimeMillis;\r\n\r\n/**\r\n 遥控车辆进行移动\r\n */\r\npublic class RemoteControl extends Activity {\r\n\r\n    public String hostIP = /*\"192.168.0.108:18081\";*/\"10.6.206.20:30549\";\r\n    public String userId = \"6D的安卓測試機\";\r\n    public String vin = \"001\";\r\n\r\n    private final static String mLogPath = Environment.getExternalStorageDirectory().getPath() + \"/tencent/\";\r\n\r\n    public CountDownTimer countDownTimer;\r\n    private MainActivity mParent;\r\n    private MQTTSample mqttSample;\r\n\r\n    private PlayerView player;\r\n    private Context mContext;\r\n    private TextView  Speed;\r\n    private List<VideoijkBean> list;\r\n    private PowerManager.WakeLock wakeLock;\r\n    private View rootView;\r\n    private Activity mActivity;\r\n\r\n    private static final String TAG = \"FullscreenActivity\";\r\n    private boolean braking = true;\r\n    private boolean active_braking=false;\r\n    private int gearGlobal=0;\r\n    private int connectMQTTTimes=0;\r\n    private int handBrakeStatus = 0;\r\n    private Button LlightingButton;\r\n    private ImageButton imageButton_forward,imageButton_backward,imageButton_brake;\r\n    private ImageView app_video_play;\r\n    private Spinner Video_Modul_Spinner;\r\n\r\n    private double wheelAngle=0.0;\r\n    private double speed=0.0;\r\n    private NtpTime ntpTime=new NtpTime();\r\n\r\n\r\n\r\n    /*虛擬機*/\r\n//    private String mBrokerURL = \"ssl://fawtsp-mqtt-public-sit.faw.cn:8883\";  //传入null，即使用腾讯云物联网通信默认地址 \"${ProductId}.iotcloud.tencentdevices.com:8883\"  https://cloud.tencent.com/document/product/634/32546\r\n    private String mBrokerURL = \"ssl://fawtsp-mqtt-sit.faw.cn:8883\";\r\n    private String mProductID = \"XN03IY1B4J\";\r\n    private String mDevName = \"app_test\";\r\n    private String mDevPSK  = \"QVuXmEVWLERWWWEegO0Fzw==\"; //若使用证书验证，设为null\r\n    private String mTestTopic = \"XN03IY1B4J/app_test/data\";\r\n\r\n\r\n    /*真车配置*/\r\n//    private String mBrokerURL = \"ssl://fawtsp-mqtt-public-sit.faw.cn:8883\";  //传入null，即使用腾讯云物联网通信默认地址 \"${ProductId}.iotcloud.tencentdevices.com:8883\"  https://cloud.tencent.com/document/product/634/32546\r\n////    private String mBrokerURL = \"ssl://10.112.16.22:8883\";  //传入null，即使用腾讯云物联网通信默认地址 \"${ProductId}.iotcloud.tencentdevices.com:8883\"  https://cloud.tencent.com/document/product/634/32546\r\n//\r\n//    private String mProductID = \"6WYMRTCPAM\";\r\n//    private String mDevName = \"app_real\";\r\n//    private String mDevPSK  = \"nrRI5+fuV1AczfwxAofd7Q==\"; //若使用证书验证，设为null\r\n//    private String mTestTopic = \"6WYMRTCPAM/app_real/data\";    // productID/DeviceName/TopicName\r\n\r\n    private String mSubProductID = \"\"; // If you wont test gateway, let this to be null\r\n    private String mSubDevName = \"\";\r\n    private String mSubDevPsk = \"BuildConfig.SUB_DEVICE_PSK\";\r\n    private String mDevCertName = \"YOUR_DEVICE_NAME_cert.crt\";\r\n    private String mDevKeyName  = \"YOUR_DEVICE_NAME_private.key\";\r\n    private String mProductKey = \"BuildConfig.PRODUCT_KEY\";        // Used for dynamic register\r\n    private String mDevCert = \"\";           // Cert String\r\n    private String mDevPriv = \"\";           // Priv String\r\n\r\n    private volatile boolean mIsConnected=false;\r\n    ScalableImageView sImgView ;\r\n\r\n    @SuppressLint(\"InvalidWakeLockTag\")\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        Log.d(TAG, \"onCreate: \");\r\n        super.onCreate(savedInstanceState);\r\n        this.mContext = this;\r\n        this.mActivity = this;\r\n        rootView = getLayoutInflater().from(this).inflate(R.layout.activity_remote_control, null);\r\n\r\n        setContentView(rootView);\r\n\r\n        mqttSample= new MQTTSample(getApplication(), new SelfMqttActionCallBack(), mBrokerURL, mProductID, mDevName, mDevPSK,\r\n                mDevCert, mDevPriv, mSubProductID, mSubDevName, mTestTopic, null, null, true, new SelfMqttLogCallBack());\r\n\r\n\r\n                while (!mIsConnected&&connectMQTTTimes<5) {\r\n                    Log.d(TAG, \"onCreate: Connecting Mqtt\");\r\n                    //轮询连接,万分感谢陈岩大佬\r\n                    Log.d(TAG, \"onCreate: mqttSample\"+mqttSample.toString());\r\n                    mqttSample.connect();\r\n                    mqttSample.subscribeTopic();\r\n                    Log.d(TAG, \"onCreate: Connet times:\"+connectMQTTTimes++);\r\n                    sleep(1000);\r\n                }\r\n                if(mIsConnected){\r\n                    Toast.makeText(RemoteControl.this, \"连接成功\",Toast.LENGTH_SHORT).show();\r\n                }else {\r\n                    Log.d(TAG, \"onCreate: 连接失败\");\r\n//                    Toast.makeText(RemoteControl.this, \"连接失败\",Toast.LENGTH_SHORT).show();\r\n//                    finishActivity(1);\r\n                    this.finish();\r\n                }\r\n\r\n\r\n\r\n\r\n        shiftHandbrake(1);\r\n        Log.d(TAG, \"onCreate: \");\r\n\r\n        new Thread(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                 while (true) {\r\n                     if(braking){\r\n                    try {\r\n                        if (active_braking){\r\n                            moveVehicle(-1.0,0.0,wheelAngle);\r\n                            sleep(50);\r\n                        }\r\n                        else {\r\n                        moveVehicle(-0.2,0.0,wheelAngle);}\r\n                        sleep(50);\r\n                    } catch (Exception e) {\r\n                        e.printStackTrace();\r\n                    }}\r\n            }\r\n        }}).start();\r\n\r\n        /**常亮*/\r\n        PowerManager pm = (PowerManager) getSystemService(Context.POWER_SERVICE);\r\n        wakeLock = pm.newWakeLock(PowerManager.SCREEN_BRIGHT_WAKE_LOCK, \"liveTAG\");\r\n        wakeLock.acquire();\r\n\r\n        CompentOnTouch compentOnTouch = new CompentOnTouch();\r\n\r\n        //返回键\r\n        findViewById(R.id.back2).setOnClickListener(new View.OnClickListener(){\r\n            @Override\r\n            public void onClick(View V){\r\n                //对话框\r\n                View my_view = LayoutInflater.from(RemoteControl.this).inflate(R.layout.my_dialog,null,false);\r\n                final AlertDialog dialog = new AlertDialog.Builder(RemoteControl.this).setView(my_view).create();\r\n                TextView Title = my_view.findViewById(R.id.title);\r\n                TextView Context = my_view.findViewById(R.id.content);\r\n                Title.setText(\"结束挪车\");\r\n                Context.setText(\"您已确定车辆已经抵达目标位置并结束挪车操作吗？\");\r\n                ImageButton Confirm = my_view.findViewById(R.id.confirm);\r\n                ImageButton cancel = my_view.findViewById(R.id.cancel);\r\n                Confirm.setOnClickListener(new View.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(View v) {\r\n                        finish();\r\n                        Intent intent=new Intent(RemoteControl.this, MainActivity.class);\r\n                        startActivity(intent);\r\n                        dialog.dismiss();\r\n                    }\r\n                });\r\n                cancel.setOnClickListener(new View.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(View v) {\r\n                        Toast.makeText(RemoteControl.this, \"取消成功\",Toast.LENGTH_SHORT).show();\r\n                        player.startPlay();\r\n                        dialog.dismiss();\r\n                    }\r\n                });\r\n                dialog.show();\r\n                player.onPause();\r\n                dialog.getWindow().setLayout(1000,600);\r\n            }\r\n        });\r\n\r\n        imageButton_forward=findViewById(R.id.forward);\r\n        imageButton_forward.setOnTouchListener(compentOnTouch);\r\n\r\n        imageButton_backward=findViewById(R.id.backward);\r\n        imageButton_backward.setOnTouchListener(compentOnTouch);\r\n\r\n        imageButton_brake=findViewById(R.id.brake);\r\n        imageButton_brake.setOnTouchListener(compentOnTouch);\r\n        sImgView = findViewById(R.id.steering_wheel);\r\n\r\n        //方向盘角度在速度处显示\r\n        countDownTimer=new CountDownTimer(100000000,200) {\r\n            @Override\r\n            public void onTick(long millisUntilFinished) {\r\n                wheelAngle = sImgView.getmDegree();\r\n                Speed = findViewById(R.id.speed);\r\n                Speed.setText(String.valueOf((int)wheelAngle));\r\n            }\r\n            @Override\r\n            public void onFinish() {\r\n            }\r\n        }.start();\r\n\r\n        //下拉单选按钮\r\n        Video_Modul_Spinner = (Spinner)findViewById(R.id.Spinner_VIdeo_Model);\r\n        Video_Modul_Spinner.setSelection(0);//进入不会自动播放\r\n        Video_Modul_Spinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener(){\r\n            @Override\r\n            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {\r\n                    String result = parent.getItemAtPosition(position).toString();\r\n                    Toast.makeText(RemoteControl.this, result, Toast.LENGTH_SHORT).show();\r\n                    switch (position) {\r\n                        case 0: {\r\n                            /**前摄像*/\r\n                            list = new ArrayList<VideoijkBean>();\r\n                            String url1 = \"rtmp://150.158.176.170/live/test_vin_1\";\r\n                            String url2 = \"rtmp://150.158.176.170/live/test_vin_2\";\r\n                            VideoijkBean m1 = new VideoijkBean();\r\n                            m1.setStream(\"原始视频\");\r\n                            m1.setUrl(url1);\r\n                            VideoijkBean m2 = new VideoijkBean();\r\n                            m2.setStream(\"融合视频\");\r\n                            m2.setUrl(url2);\r\n                            list.add(m1);\r\n                            list.add(m2);\r\n                            player = new PlayerView(mActivity, rootView)\r\n                                    .setProcessDurationOrientation(PlayStateParams.PROCESS_PORTRAIT)\r\n                                    .setScaleType(PlayStateParams.fillparent) //视频界面剪裁设置\r\n                                    .forbidTouch(false)\r\n                                    .hideSteam(false)\r\n                                    .hideMenu(true)\r\n                                    .hideCenterPlayer(true)\r\n                                    .hideBack(false)\r\n                                    .setOnlyFullScreen(true)\r\n                                    .setNetWorkTypeTie(false)\r\n                                    .hideRotation(true)\r\n                                    .hideFullscreen(true)\r\n                                    .hideBack(true)\r\n                                    .setChargeTie(true, 480)//设置最长播放时间\r\n                                    .showThumbnail(new OnShowThumbnailListener() {\r\n                                        @Override\r\n                                        public void onShowThumbnail(ImageView ivThumbnail) {\r\n//                                 加载前显示的缩略图\r\n                                            Glide.with(mContext)\r\n                                                    .load(R.drawable.pic_before_video)\r\n                                                    .placeholder(R.drawable.pic_before_video) //加载成功之前占位图\r\n                                                    .error(R.color.cl_error)//加载错误之后的错误图\r\n                                                    .into(ivThumbnail);\r\n                                        }\r\n                                    })\r\n                                    .setPlayerStartOrPauseListener(new OnPlayerStartOrPauseListener() {\r\n                                        @Override\r\n                                        public void onStartOrPause() {\r\n                                            //对话框\r\n                                            AlertDialog.Builder builder=new AlertDialog.Builder(mContext);\r\n                                            builder.setTitle(\"暂停挪车\");//设置对话框的标题\r\n                                            builder.setMessage(\"挪车已暂停，是否继续挪车？\");//设置对话框的内容\r\n                                            builder.setPositiveButton(\"继续\", new DialogInterface.OnClickListener() {  //这个是设置确定按钮\r\n                                                @Override\r\n                                                public void onClick(DialogInterface arg0, int arg1) {\r\n                                                    player.startPlay();\r\n                                                }\r\n                                            });\r\n                                            builder.setNegativeButton(\"结束\", new DialogInterface.OnClickListener() {  //取消按钮\r\n\r\n                                                @Override\r\n                                                public void onClick(DialogInterface arg0, int arg1) {\r\n                                                    finish();\r\n                                                    Intent intent=new Intent(RemoteControl.this,MainActivity.class);\r\n                                                    startActivity(intent);\r\n                                                }\r\n                                            });\r\n                                            AlertDialog b=builder.create();\r\n                                            b.show();\r\n                                        }\r\n                                    })\r\n                                    .setPlaySource(list)\r\n                                    .startPlay();\r\n                        }\r\n                        break;\r\n\r\n                        case 1: {\r\n                            /**后摄像*/\r\n                            String url3 = \"rtmp://150.158.176.170/live/test_vin_2\";\r\n                            playVideoUrl(url3);\r\n                        }\r\n                        break;\r\n\r\n                        case 2: {\r\n                            /**左摄像*/\r\n                            String url4 = \"rtmp://150.158.176.170/live/test_vin_3\";\r\n                            playVideoUrl(url4);\r\n                        }\r\n                        break;\r\n\r\n                        case 3: {\r\n                            /**右摄像*/\r\n                            String url5 = \"rtmp://150.158.176.170/live/test_vin_4\";\r\n                            playVideoUrl(url5);\r\n                        }\r\n                        break;\r\n\r\n                        case 4: {\r\n                            /**上帝*/\r\n                            String url6 = \"rtmp://150.158.176.170/live/test_vin_5\";\r\n                            playVideoUrl(url6);\r\n                        }\r\n                        break;\r\n\r\n                        default:\r\n                            break;\r\n                    }\r\n\r\n            }\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> parent) { }\r\n        });\r\n\r\n    }\r\n\r\n    //后四个视频播放器播放\r\n    public void playVideoUrl( String url){\r\n        player = new PlayerView(mActivity, rootView)\r\n                .setProcessDurationOrientation(PlayStateParams.PROCESS_PORTRAIT)\r\n                .setScaleType(PlayStateParams.fillparent) //视频界面剪裁设置\r\n                .forbidTouch(false)\r\n                .hideSteam(true)\r\n                .hideMenu(true)\r\n                .hideCenterPlayer(true)\r\n                .hideBack(false)\r\n                .setOnlyFullScreen(true)\r\n                .setNetWorkTypeTie(false)\r\n                .hideRotation(true)\r\n                .hideFullscreen(true)\r\n                .hideBack(true)\r\n                .setChargeTie(true, 480)//设置最长播放时间\r\n                .showThumbnail(new OnShowThumbnailListener() {\r\n                    @Override\r\n                    public void onShowThumbnail(ImageView ivThumbnail) {\r\n//                                 加载前显示的缩略图\r\n                        Glide.with(mContext)\r\n                                .load(R.drawable.pic_before_video)\r\n                                .placeholder(R.drawable.pic_before_video) //加载成功之前占位图\r\n                                .error(R.color.cl_error)//加载错误之后的错误图\r\n                                .into(ivThumbnail);\r\n                    }\r\n                })\r\n                .setPlayerStartOrPauseListener(new OnPlayerStartOrPauseListener() {\r\n                    @Override\r\n                    public void onStartOrPause() {\r\n                        //对话框\r\n                        AlertDialog.Builder builder = new AlertDialog.Builder(mContext);\r\n                        builder.setTitle(\"暂停挪车\");//设置对话框的标题\r\n                        builder.setMessage(\"挪车已暂停，是否继续挪车？\");//设置对话框的内容\r\n                        builder.setPositiveButton(\"继续\", new DialogInterface.OnClickListener() {  //这个是设置确定按钮\r\n                            @Override\r\n                            public void onClick(DialogInterface arg0, int arg1) {\r\n                                player.startPlay();\r\n                            }\r\n                        });\r\n                        builder.setNegativeButton(\"结束\", new DialogInterface.OnClickListener() {  //取消按钮\r\n\r\n                            @Override\r\n                            public void onClick(DialogInterface arg0, int arg1) {\r\n                                finish();\r\n                                Intent intent = new Intent(RemoteControl.this, MainActivity.class);\r\n                                startActivity(intent);\r\n                            }\r\n                        });\r\n                        AlertDialog b = builder.create();\r\n                        b.show();\r\n                    }\r\n                })\r\n                .setPlaySource(url)\r\n                .startPlay();\r\n    }\r\n\r\n\r\n    /**\r\n    1表示手刹释放，0表示手刹锁定\r\n     **/\r\n\r\n    private void shiftHandbrake(int handbrakeToSet) {\r\n        if(handbrakeToSet!=handBrakeStatus){\r\n            for(int i=0;i<15;i++){\r\n                Handbrake mHandbrake = new Handbrake();\r\n                mHandbrake.setTimestamp(ntpTime.getNtpTime());\r\n                mHandbrake.setStatus(handbrakeToSet);\r\n                mHandbrake.setType(14);\r\n                mHandbrake.setTaskid(\"6D\");\r\n                // 需先在腾讯云控制台，增加自定义主题: data，用于更新自定义数据\r\n                mqttSample.publishTopic(\"data\", JSON.toJSONString(mHandbrake));\r\n                Log.d(TAG, \"onClick: 手刹\"+JSON.toJSONString(mHandbrake));\r\n                sleep(50);\r\n            }\r\n            handBrakeStatus=handbrakeToSet;}\r\n        else return;\r\n    }\r\n\r\n    /**\r\n    1,2,3,4分別對應P,R,N,D四個檔位\r\n     **/\r\n    private void shiftGear(final int gear){\r\n//        if(speed==0){\r\n        for(int i=0;i<10;i++){\r\n                Gears mGear = new Gears();\r\n                mGear.setTimestamp(ntpTime.getNtpTime());\r\n                Log.d(TAG, \"onClick: \"+System.currentTimeMillis());\r\n                mGear.setGear(gear);\r\n                mGear.setType(13);\r\n                mGear.setTaskid(\"手機挂\"+gear+\"档\");\r\n                // 需先在腾讯云控制台，增加自定义主题: data，用于更新自定义数据\r\n                mqttSample.publishTopic(\"data\", JSON.toJSONString(mGear));\r\n                Log.d(TAG, \"onClick: \"+JSON.toJSONString(mGear));\r\n                sleep(50);\r\n        }\r\n        gearGlobal=gear;\r\n//    }\r\n//        else {\r\n//            moveVehicle(-0.3,0.0,0.0);\r\n//            shiftGear(gear);\r\n//        }\r\n    }\r\n\r\n    /**\r\n\r\n     @videoType\r\n     1为前方原始视频流，2为后方原始视频流，3为左侧原始视频流，4为右侧原始视频流，5为感知融合视频流，6为上帝视角视频流\r\n     @videoStatus\r\n     1为打开，0为关闭\r\n     */\r\n    private void shiftVideoType(int videoType,int videoStatus){\r\n        Video mVideo = new Video();\r\n        mVideo.setTimestamp(ntpTime.getNtpTime());\r\n        mVideo.setVideo_type(videoType);\r\n        mVideo.setOperation(videoStatus);\r\n        mVideo.setType(12);\r\n        // 需先在腾讯云控制台，增加自定义主题: data，用于更新自定义数据\r\n        mqttSample.publishTopic(\"data\", JSON.toJSONString(mVideo));\r\n        Log.d(TAG, \"onClick: \"+JSON.toJSONString(mVideo));\r\n    }\r\n\r\n    /**\r\n     * @acceleration 加速度，正是加速，負的是減速\r\n     * @speed 目標速度\r\n     * @wheelAngle 方向盤轉角\r\n     */\r\n    private void moveVehicle(Double acceleration,Double speed,Double wheelAngle){\r\n        Control mMove = new Control();\r\n        mMove.setTimestamp(ntpTime.getNtpTime());\r\n        mMove.setAcceleration(acceleration);\r\n        mMove.setSpeed(speed);\r\n        mMove.setType(11);\r\n        mMove.setWheel_angle(wheelAngle);\r\n        // 需先在腾讯云控制台，增加自定义主题: data，用于更新自定义数据\r\n        mqttSample.publishTopic(\"data\", JSON.toJSONString(mMove));\r\n        Log.d(TAG, \"onClick: 上传指令\"+JSON.toJSONString(mMove));\r\n    }\r\n\r\n    @Override\r\n    protected void onPostCreate(Bundle savedInstanceState) {\r\n        super.onPostCreate(savedInstanceState);\r\n    }\r\n\r\n    //ms为需要休眠的时长\r\n    public static void sleep(long ms)\r\n    {\r\n        //uptimeMillis() Returns milliseconds since boot, not counting time spent in deep sleep.\r\n        long start = uptimeMillis();\r\n        long duration = ms;\r\n        boolean interrupted = false;\r\n        do {\r\n            try {\r\n                Thread.sleep(duration);\r\n            }\r\n            catch (InterruptedException e) {\r\n                interrupted = true;\r\n            }\r\n            duration = start + ms - uptimeMillis();\r\n        } while (duration > 0);\r\n\r\n        if (interrupted) {\r\n            Thread.currentThread().interrupt();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 实现TXMqttActionCallBack回调接口\r\n     */\r\n    private class SelfMqttActionCallBack extends TXMqttActionCallBack {\r\n\r\n        @Override\r\n        public void onConnectCompleted(Status status, boolean reconnect, Object userContext, String msg) {\r\n            String userContextInfo = \"\";\r\n            if (userContext instanceof MQTTRequest) {\r\n                userContextInfo = userContext.toString();\r\n            }\r\n            String logInfo = String.format(\"onConnectCompleted, status[%s], reconnect[%b], userContext[%s], msg[%s]\",\r\n                    status.name(), reconnect, userContextInfo, msg);\r\n            Log.d(TAG, \"onConnectCompleted: \"+logInfo);\r\n            if(status==Status.OK){\r\n             mIsConnected = true;}\r\n        }\r\n\r\n        @Override\r\n        public void onConnectionLost(Throwable cause) {\r\n            String logInfo = String.format(\"onConnectionLost, cause[%s]\", cause.toString());\r\n            Log.d(TAG, \"onConnectCompleted: \"+logInfo);\r\n        }\r\n\r\n        @Override\r\n        public void onDisconnectCompleted(Status status, Object userContext, String msg) {\r\n            String userContextInfo = \"\";\r\n            if (userContext instanceof MQTTRequest) {\r\n                userContextInfo = userContext.toString();\r\n            }\r\n            String logInfo = String.format(\"onDisconnectCompleted, status[%s], userContext[%s], msg[%s]\", status.name(), userContextInfo, msg);\r\n            Log.d(TAG, \"onConnectCompleted: \"+logInfo);\r\n            mIsConnected = false;\r\n        }\r\n\r\n        @Override\r\n        public void onPublishCompleted(Status status, IMqttToken token, Object userContext, String errMsg) {\r\n            String userContextInfo = \"\";\r\n            if (userContext instanceof MQTTRequest) {\r\n                userContextInfo = userContext.toString();\r\n            }\r\n            String logInfo = String.format(\"onPublishCompleted, status[%s], topics[%s],  userContext[%s], errMsg[%s]\",\r\n                    status.name(), Arrays.toString(token.getTopics()), userContextInfo, errMsg);\r\n            Log.d(TAG, \"onConnectCompleted: \"+logInfo);\r\n        }\r\n\r\n        @Override\r\n        public void onSubscribeCompleted(Status status, IMqttToken asyncActionToken, Object userContext, String errMsg) {\r\n            String userContextInfo = \"\";\r\n            if (userContext instanceof MQTTRequest) {\r\n                userContextInfo = userContext.toString();\r\n            }\r\n            String logInfo = String.format(\"onSubscribeCompleted, status[%s], topics[%s], userContext[%s], errMsg[%s]\",\r\n                    status.name(), Arrays.toString(asyncActionToken.getTopics()), userContextInfo, errMsg);\r\n//            Toast.makeText(RemoteControl.this, logInfo,Toast.LENGTH_SHORT).show();\r\n            if (Status.ERROR == status) {\r\n                Log.d(TAG, \"onConnectCompleted: \"+logInfo);\r\n            } else {\r\n                Log.d(TAG, \"onConnectCompleted: \"+logInfo);\r\n            }\r\n        }\r\n\r\n        @Override\r\n        public void onUnSubscribeCompleted(Status status, IMqttToken asyncActionToken, Object userContext, String errMsg) {\r\n            String userContextInfo = \"\";\r\n            if (userContext instanceof MQTTRequest) {\r\n                userContextInfo = userContext.toString();\r\n            }\r\n            String logInfo = String.format(\"onUnSubscribeCompleted, status[%s], topics[%s], userContext[%s], errMsg[%s]\",\r\n                    status.name(), Arrays.toString(asyncActionToken.getTopics()), userContextInfo, errMsg);\r\n            Log.d(TAG, \"onConnectCompleted: \"+logInfo);\r\n        }\r\n\r\n        @Override\r\n        public void onMessageReceived(final String topic, final MqttMessage message) {\r\n            String logInfo = String.format(\"receive command, topic[%s], message[%s]\", topic, message.toString());\r\n//            Toast.makeText(RemoteControl.this, logInfo,Toast.LENGTH_SHORT).show();\r\n            Log.d(TAG, \"onConnectCompleted: \"+logInfo);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 实现TXMqttLogCallBack回调接口\r\n     */\r\n    private class SelfMqttLogCallBack extends TXMqttLogCallBack {\r\n\r\n        @Override\r\n        public String setSecretKey() {\r\n            String secertKey;\r\n            if (mDevPSK != null && mDevPSK.length() != 0) {  //密钥认证\r\n                secertKey = mDevPSK;\r\n                secertKey = secertKey.length() > 24 ? secertKey.substring(0,24) : secertKey;\r\n                return secertKey;\r\n            } else {\r\n                BufferedReader cert;\r\n\r\n                if (mDevCert != null && mDevCert.length() != 0) { //动态注册,从DevCert中读取\r\n                    cert = new BufferedReader(new InputStreamReader(new ByteArrayInputStream(mDevCert.getBytes(Charset.forName(\"utf8\"))), Charset.forName(\"utf8\")));\r\n\r\n                } else { //证书认证，从证书文件中读取\r\n                    AssetManager assetManager = mParent.getAssets();\r\n                    if (assetManager == null) {\r\n                        return null;\r\n                    }\r\n                    try {\r\n                        cert=new BufferedReader(new InputStreamReader(assetManager.open(mDevCertName)));\r\n                    } catch (IOException e) {\r\n//                        mParent.printLogInfo(TAG, \"getSecertKey failed, cannot open CRT Files.\",mLogInfoText);\r\n                        return null;\r\n                    }\r\n                }\r\n                //获取密钥\r\n                try {\r\n                    if (cert.readLine().contains(\"-----BEGIN\")) {\r\n                        secertKey = cert.readLine();\r\n                        secertKey = secertKey.length() > 24 ? secertKey.substring(0,24) : secertKey;\r\n                    } else {\r\n                        secertKey = null;\r\n//                        mParent.printLogInfo(TAG,\"Invaild CRT Files.\", mLogInfoText);\r\n                    }\r\n                    cert.close();\r\n                } catch (IOException e) {\r\n                    TXLog.e(TAG, \"getSecertKey failed.\", e);\r\n//                    mParent.printLogInfo(TAG,\"getSecertKey failed.\", mLogInfoText);\r\n                    return null;\r\n                }\r\n            }\r\n\r\n            return secertKey;\r\n        }\r\n\r\n        @Override\r\n        public void printDebug(String message){\r\n//            mParent.printLogInfo(TAG, message, mLogInfoText);\r\n            //TXLog.d(TAG,message);\r\n        }\r\n\r\n        @Override\r\n        public boolean saveLogOffline(String log){\r\n            //判断SD卡是否可用\r\n            if (!Environment.MEDIA_MOUNTED.equals(Environment.getExternalStorageState())) {\r\n//                mParent.printLogInfo(TAG, \"saveLogOffline not ready\", mLogInfoText);\r\n                return false;\r\n            }\r\n\r\n            String logFilePath = mLogPath + mProductID + mDevName + \".log\";\r\n\r\n            TXLog.i(TAG, \"Save log to %s\", logFilePath);\r\n\r\n            try {\r\n                BufferedWriter wLog = new BufferedWriter(new FileWriter(new File(logFilePath), true));\r\n                wLog.write(log);\r\n                wLog.flush();\r\n                wLog.close();\r\n                return true;\r\n            } catch (IOException e) {\r\n                String logInfo = String.format(\"Save log to [%s] failed, check the Storage permission!\", logFilePath);\r\n//                mParent.printLogInfo(TAG,logInfo, mLogInfoText);\r\n                e.printStackTrace();\r\n                return false;\r\n            }\r\n        }\r\n\r\n        @Override\r\n        public String readOfflineLog(){\r\n            //判断SD卡是否可用\r\n            if (!Environment.MEDIA_MOUNTED.equals(Environment.getExternalStorageState())) {\r\n//                mParent.printLogInfo(TAG, \"readOfflineLog not ready\", mLogInfoText);\r\n                return null;\r\n            }\r\n\r\n            String logFilePath = mLogPath + mProductID + mDevName + \".log\";\r\n\r\n            TXLog.i(TAG, \"Read log from %s\", logFilePath);\r\n\r\n            try {\r\n                BufferedReader logReader = new BufferedReader(new FileReader(logFilePath));\r\n                StringBuilder offlineLog = new StringBuilder();\r\n                int data;\r\n                while (( data = logReader.read()) != -1 ) {\r\n                    offlineLog.append((char)data);\r\n                }\r\n                logReader.close();\r\n                return offlineLog.toString();\r\n            } catch (IOException e) {\r\n                e.printStackTrace();\r\n                return null;\r\n            }\r\n        }\r\n\r\n        @Override\r\n        public boolean delOfflineLog(){\r\n\r\n            //判断SD卡是否可用\r\n            if (!Environment.MEDIA_MOUNTED.equals(Environment.getExternalStorageState())) {\r\n//                mParent.printLogInfo(TAG, \"delOfflineLog not ready\", mLogInfoText);\r\n                return false;\r\n            }\r\n\r\n            String logFilePath = mLogPath + mProductID + mDevName + \".log\";\r\n\r\n            File file = new File(logFilePath);\r\n            if (file.exists() && file.isFile()) {\r\n                if (file.delete()) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n\r\n    }\r\n\r\n    class\r\n    CompentOnTouch implements View.OnTouchListener {\r\n\r\n        public boolean isOnLongClick=false;\r\n        int i = 0;\r\n\r\n        @Override\r\n        public boolean onTouch(View view, MotionEvent motionEvent) {\r\n            switch (view.getId()) {\r\n// 这是btnMius下的一个层，为了增强易点击性\r\n                case R.id.backward:\r\n                    onTouchChange(\"backward\", motionEvent.getAction());\r\n                    break;\r\n// 这里也写，是为了增强易点击性\r\n                case R.id.forward:\r\n                    onTouchChange(\"forward\", motionEvent.getAction());\r\n                    break;\r\n                case R.id.brake:\r\n                    onTouchChange(\"brake\", motionEvent.getAction());\r\n                    break;\r\n            }\r\n            return true;\r\n        }\r\n\r\n        private void onTouchChange(String methodName, int eventAction) {\r\n            Log.d(TAG, \"onTouchChange: \"+methodName+eventAction);\r\n            if(\"backward\".equals(methodName)||\"forward\".equals(methodName)){\r\n            braking =false;\r\n            active_braking=false;}\r\n// 按下松开分别对应启动停止前进方法\r\n            if (\"backward\".equals(methodName)) {\r\n//                Video_Modul_Spinner.setSelection(1);\r\n                if(gearGlobal!=2){ shiftGear(2);}\r\n                MiusThread miusThread = null;\r\n                if (eventAction == MotionEvent.ACTION_DOWN) {\r\n                    miusThread = new MiusThread();\r\n                    isOnLongClick = true;\r\n                    miusThread.start();\r\n                } else if (eventAction == MotionEvent.ACTION_UP) {\r\n                    isOnLongClick=false;\r\n                    braking =true;\r\n                    Log.d(TAG, \"onTouchChange: 松开手指\"+ braking);\r\n//                    Log.d(TAG, \"onTouchChange: isOnLongClick=false\"+miusThread.isInterrupted());\r\n                    if (miusThread != null) {\r\n                        miusThread.interrupt();\r\n                        Log.d(TAG, \"onTouchChange: 终止线程\");\r\n                        isOnLongClick = false;\r\n                    }\r\n                } else if (eventAction == MotionEvent.ACTION_MOVE) {\r\n                    if (miusThread != null) {\r\n                        isOnLongClick = true;\r\n                    }\r\n                }\r\n            }\r\n// 按下松开分别对应启动停止加线程方法\r\n            else if (\"forward\".equals(methodName)) {\r\n//                Video_Modul_Spinner.setSelection(0);\r\n                if(gearGlobal!=4){ shiftGear(4);}\r\n                PlusThread plusThread = null;\r\n                if (eventAction == MotionEvent.ACTION_DOWN) {\r\n                    plusThread = new PlusThread();\r\n                    isOnLongClick = true;\r\n                    plusThread.start();\r\n                } else if (eventAction == MotionEvent.ACTION_UP) {\r\n                    Log.d(TAG, \"onTouchChange: 松开手指\");\r\n                    isOnLongClick=false;\r\n                    braking =true;\r\n                    if (plusThread != null) {\r\n                        isOnLongClick = false;\r\n                    }\r\n                } else if (eventAction == MotionEvent.ACTION_MOVE) {\r\n                    if (plusThread != null) {\r\n                        isOnLongClick = true;\r\n                    }\r\n                }\r\n            }\r\n            else if (\"brake\".equals(methodName)) {\r\n                braking=true;\r\n                if (eventAction == MotionEvent.ACTION_DOWN) {\r\n                    active_braking=true;\r\n//                    moveVehicle(-1.0,0.0,0.0);\r\n                    isOnLongClick = true;\r\n                } else if (eventAction == MotionEvent.ACTION_UP) {\r\n                    Log.d(TAG, \"onTouchChange: 松开手指\");\r\n                    isOnLongClick=false;\r\n                    active_braking=false;\r\n                } else if (eventAction == MotionEvent.ACTION_MOVE) {\r\n                    isOnLongClick = true;\r\n                    active_braking=true;\r\n//                    moveVehicle(-1.0,0.0,0.0);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        // 后退操作\r\n        class MiusThread extends Thread {\r\n            @Override\r\n            public void run() {\r\n                while (isOnLongClick) {\r\n                    try {\r\n                        Thread.sleep(50);\r\n                        myHandler.sendEmptyMessage(2);\r\n                    } catch (InterruptedException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                    super.run();\r\n                }\r\n//                while (!isOnLongClick) {\r\n//                    try {\r\n//                        Thread.sleep(100);\r\n//                        myHandler.sendEmptyMessage(3);\r\n//                    } catch (InterruptedException e) {\r\n//                        e.printStackTrace();\r\n//                    }\r\n//                    super.run();\r\n//                }\r\n            }\r\n        }\r\n\r\n\r\n        // 前进操作\r\n        class PlusThread extends Thread {\r\n            @Override\r\n            public void run() {\r\n                while (isOnLongClick) {\r\n                    try {\r\n                        Thread.sleep(40);\r\n                        myHandler.sendEmptyMessage(1);\r\n                    } catch (InterruptedException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                    super.run();\r\n                }\r\n//                while (!isOnLongClick) {\r\n//                    try {\r\n//                        Thread.sleep(100);\r\n//                        myHandler.sendEmptyMessage(3);\r\n//                    } catch (InterruptedException e) {\r\n//                        e.printStackTrace();\r\n//                    }\r\n//                    super.run();\r\n//                }\r\n            }\r\n        }\r\n\r\n        Handler myHandler = new Handler() {\r\n            public void handleMessage(Message msg) {\r\n                switch (msg.what) {\r\n                    case 1:\r\n                        //前进操作\r\n                        Control mForward = new Control(5.0,0.2,wheelAngle);\r\n                        mqttSample.publishTopic(\"data\", JSON.toJSONString(mForward));\r\n                        Log.d(TAG, \"第 \"+(i++)+\"次上传\\n\"+JSON.toJSONString(mForward));\r\n                        moveVehicle(0.2,5.0,wheelAngle);\r\n                        break;\r\n                    case 2:\r\n                        Control mBackward = new Control(-5.0,0.2,wheelAngle);\r\n                        mqttSample.publishTopic(\"data\", JSON.toJSONString(mBackward));\r\n                        Log.d(TAG, \"第 \"+(i++)+\"次上传\\n\"+JSON.toJSONString(mBackward));\r\n                        moveVehicle(0.1,-5.0,wheelAngle);\r\n                        break;\r\n                    case 3:\r\n                        Control mBreak = new Control(0.0,-0.2,wheelAngle);\r\n                        mqttSample.publishTopic(\"data\", JSON.toJSONString(mBreak));\r\n                        Log.d(TAG, \"第 \"+(i++)+\"次上传\\n\"+JSON.toJSONString(mBreak));\r\n                        break;\r\n                }\r\n            };\r\n        };\r\n    }\r\n\r\n    @Override\r\n    protected void onPause() {\r\n        super.onPause();\r\n        if (player != null) {\r\n            player.onPause();\r\n        }\r\n        /**demo的内容，恢复系统其它媒体的状态*/\r\n        MediaUtils.muteAudioFocus(mContext, true);\r\n    }\r\n\r\n    @Override\r\n    protected void onResume() {\r\n        super.onResume();\r\n        if (player != null) {\r\n            player.onResume();\r\n        }\r\n        /**demo的内容，暂停系统其它媒体的状态*/\r\n        MediaUtils.muteAudioFocus(mContext, false);\r\n        /**demo的内容，激活设备常亮状态*/\r\n        if (wakeLock != null) {\r\n            wakeLock.acquire();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onDestroy() {\r\n        if(mIsConnected){\r\n        super.onDestroy();\r\n        if (player != null) {\r\n            for(int i=1;i<7;i++){\r\n            shiftVideoType(i,0);}\r\n            player.onDestroy();\r\n        }\r\n        if(speed!=0){moveVehicle(-0.3,0.0,0.0);}\r\n        if(braking){braking=false;}\r\n        if(gearGlobal!=1){shiftGear(1);}\r\n        if(handBrakeStatus==1){shiftHandbrake(0);}\r\n        if(mIsConnected){mqttSample.disconnect();}\r\n\r\n        Log.d(TAG, \"onDestroy: 斷開視頻以及MQTT連接\");}\r\n    }\r\n\r\n    @Override\r\n    public void onConfigurationChanged(Configuration newConfig) {\r\n        super.onConfigurationChanged(newConfig);\r\n        if (player != null) {\r\n            player.onConfigurationChanged(newConfig);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        if (player != null && player.onBackPressed()) {\r\n            return;\r\n        }\r\n//        super.onBackPressed();\r\n        //对话框\r\n        AlertDialog.Builder builder=new AlertDialog.Builder(mContext);\r\n        builder.setTitle(\"结束挪车\");//设置对话框的标题\r\n        builder.setMessage(\"您已确定车辆已经抵达目标位置并结束挪车操作吗？\");//设置对话框的内容\r\n        builder.setPositiveButton(\"确定\", new DialogInterface.OnClickListener() {  //这个是设置确定按钮\r\n            @Override\r\n            public void onClick(DialogInterface arg0, int arg1) {\r\n                finish();\r\n                Intent intent=new Intent(RemoteControl.this, MainActivity.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n        builder.setNegativeButton(\"取消\", new DialogInterface.OnClickListener() {  //取消按钮\r\n\r\n            @Override\r\n            public void onClick(DialogInterface arg0, int arg1) {\r\n                Toast.makeText(RemoteControl.this, \"取消成功\",Toast.LENGTH_SHORT).show();\r\n                player.startPlay();\r\n            }\r\n        });\r\n        AlertDialog b=builder.create();\r\n        b.show();\r\n        player.onPause();\r\n        /**demo的内容，恢复设备亮度状态*/\r\n        if (wakeLock != null) {\r\n            wakeLock.release();\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/dou361/jjdxm_ijkplayer/remotecontrol/RemoteControl.java	(revision 0a79339a31be5764438e7c12d5dc21790fd30f39)
+++ app/src/main/java/com/dou361/jjdxm_ijkplayer/remotecontrol/RemoteControl.java	(date 1619055484542)
@@ -150,7 +150,8 @@
         super.onCreate(savedInstanceState);
         this.mContext = this;
         this.mActivity = this;
-        rootView = getLayoutInflater().from(this).inflate(R.layout.activity_remote_control, null);
+        getLayoutInflater();
+        rootView = LayoutInflater.from(this).inflate(R.layout.activity_remote_control, null);
 
         setContentView(rootView);
 
@@ -163,7 +164,7 @@
                     //轮询连接,万分感谢陈岩大佬
                     Log.d(TAG, "onCreate: mqttSample"+mqttSample.toString());
                     mqttSample.connect();
-                    mqttSample.subscribeTopic();
+//                    mqttSample.subscribeTopic();
                     Log.d(TAG, "onCreate: Connet times:"+connectMQTTTimes++);
                     sleep(1000);
                 }
Index: app/src/main/java/com/dou361/jjdxm_ijkplayer/videomonitoring/VideoMonitor.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.dou361.jjdxm_ijkplayer.videomonitoring;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.app.Activity;\r\nimport android.content.Context;\r\nimport android.content.res.Configuration;\r\nimport android.os.Bundle;\r\nimport android.os.CountDownTimer;\r\nimport android.os.PowerManager;\r\nimport android.util.Log;\r\nimport android.view.SurfaceHolder;\r\nimport android.view.SurfaceView;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.ImageButton;\r\nimport android.widget.ImageView;\r\nimport android.widget.RadioButton;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.alibaba.fastjson.JSON;\r\nimport com.bumptech.glide.Glide;\r\nimport com.dou361.ijkplayer.bean.VideoijkBean;\r\nimport com.dou361.ijkplayer.listener.OnShowThumbnailListener;\r\nimport com.dou361.ijkplayer.widget.PlayStateParams;\r\nimport com.dou361.ijkplayer.widget.PlayerView;\r\nimport com.dou361.jjdxm_ijkplayer.R;\r\nimport com.dou361.jjdxm_ijkplayer.videomonitoring.utlis.MediaUtils;\r\nimport com.videogo.openapi.EZPlayer;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\n\r\nimport butterknife.ButterKnife;\r\nimport butterknife.OnClick;\r\nimport okhttp3.MediaType;\r\nimport okhttp3.OkHttpClient;\r\nimport okhttp3.Request;\r\nimport okhttp3.RequestBody;\r\nimport okhttp3.Response;\r\n\r\nimport static android.content.ContentValues.TAG;\r\n\r\npublic class VideoMonitor extends Activity implements View.OnClickListener , MyRadioGroup.OnCheckedChangeListener {\r\n\r\n\r\n\r\n    public String hostURL=\"http://vehicleroadcloud.faw.cn:60443/backend/appBackend/\";\r\n    public CountDownTimer countDownTimer;\r\n    public VideoRequest videoRequest;\r\n    public VideoReply videoReply,videoReply2;\r\n    public String videoResponseString,mergeVideoString;//视频Post请求返回数据\r\n    private PlayerView player;\r\n    private Context mContext;\r\n    private List<VideoijkBean> list;\r\n    private PowerManager.WakeLock wakeLock;\r\n    View rootView;\r\n    private Integer videoPlayingNum=-1;\r\n    private MyRadioGroup videoRatioGroup;\r\n    private RadioButton buttonFront, buttonBack, buttonLeft, buttonRight, channelGodPerspective;\r\n    private HashMap<String, RadioButton> channels = new HashMap<>(5);\r\n    private ImageButton lightControllerButton;\r\n\r\n\r\n    @SuppressLint(\"InvalidWakeLockTag\")\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        this.mContext = this;\r\n        rootView = getLayoutInflater().from(this).inflate(R.layout.activity_videomonitor, null);\r\n        setContentView(rootView);\r\n        ButterKnife.bind(this);\r\n\r\n        lightControllerButton=(ImageButton) findViewById(R.id.light);\r\n        lightControllerButton.setOnClickListener(this);\r\n\r\n        buttonFront = (RadioButton) findViewById(R.id.front_Click);\r\n        buttonBack = (RadioButton)findViewById(R.id.back_Click);\r\n        buttonLeft = (RadioButton)findViewById(R.id.left_Click);\r\n        buttonRight = (RadioButton)findViewById(R.id.right_Click);\r\n        channelGodPerspective = (RadioButton)findViewById(R.id.god_perspective_Click);\r\n        buttonFront.setOnClickListener(this);\r\n        buttonBack.setOnClickListener(this);\r\n        buttonLeft.setOnClickListener(this);\r\n        buttonRight.setOnClickListener(this);\r\n        channelGodPerspective.setOnClickListener(this);\r\n        channels.put(\"Channel_Front\",buttonFront);\r\n        channels.put(\"Channel_Back\",buttonBack);\r\n        channels.put(\"Channel_Left\",buttonLeft);\r\n        channels.put(\"Channel_Right\",buttonRight);\r\n        channels.put(\"Channel_God_Perspective\", channelGodPerspective);\r\n//\r\n//        replyTextView=findViewById(R.id.replyTextView);\r\n//        requestTextView=findViewById(R.id.requestTextView);\r\n\r\n\r\n        /**常亮*/\r\n        PowerManager pm = (PowerManager) getSystemService(Context.POWER_SERVICE);\r\n        wakeLock = pm.newWakeLock(PowerManager.SCREEN_BRIGHT_WAKE_LOCK, \"liveTAG\");\r\n        wakeLock.acquire();\r\n\r\n        for(int i=1;i<7;i++){//for循環打開所有視頻流\r\n                postVideoRequest(i,1);}\r\n\r\n\r\n        videoRatioGroup = (MyRadioGroup)findViewById(R.id.radiogroup);\r\n        videoRatioGroup.setOnCheckedChangeListener(new MyRadioGroup.OnCheckedChangeListener() {\r\n            @Override\r\n            public void onCheckedChanged(MyRadioGroup group, int checkedId) {\r\n                videoReply = new VideoReply(\"原始\");\r\n                videoReply2 = new VideoReply(\"融合\");\r\n                switch (checkedId){\r\n                    case R.id.left_Click:\r\n                        playVideo(3);\r\n//                        try2play(3);\r\n                        break;\r\n                    case R.id.right_Click:\r\n                        playVideo(4);\r\n//                        try2play(4);\r\n                        break;\r\n                    case R.id.front_Click:\r\n                        playVideo(0);\r\n//                        try2play(0);\r\n                        break;\r\n                    case R.id.back_Click:\r\n                        playVideo(2);\r\n//                        try2play(2);\r\n                        break;\r\n                    case R.id.god_perspective_Click:\r\n                        playVideo(5);\r\n//                        try2play(5);\r\n\r\n                        break;\r\n                    default:\r\n                        Toast defualt =Toast.makeText(VideoMonitor.this, \"上帝\", Toast.LENGTH_SHORT);\r\n                        new ShowMyToast().showMyToast(defualt,100);\r\n                        break;\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private void try2play(final int videoNum) {\r\n        //请求第videoNum的视频\r\n        Log.d(TAG, \"嘗試播放: \"+videoNum+\"路視頻，正在播放\"+videoPlayingNum+\"路視頻\");\r\n        if(videoPlayingNum==videoNum){return;}\r\n        else if((videoPlayingNum==1||videoPlayingNum==6)&&(videoNum==0)){\r\n            Log.d(TAG, \"try2play: \"+\"當前播放視頻就是待播放視頻的時候，不需操作\");\r\n            return;}\r\n        //當前播放視頻就是待播放視頻的時候，不需操作\r\n        videoReply.initialVideoReply();\r\n        videoReply2.initialVideoReply();\r\n\r\n        if (videoNum!=0){\r\n            //for循环关闭其他所有视频以节省流量\r\n            /*for(int i=1;i<7;i++){\r\n                if(i!=videoNum)\r\n                postVideoRequest(i,0);\r\n            }*/\r\n        countDownTimer=new CountDownTimer(10000,1000) {\r\n            int i=0;\r\n            @Override\r\n            public void onTick(long millisUntilFinished) {\r\n                i=i+1;\r\n//                replyTextView.setText(\"执行第\"+i+\"次请求：\"+videoReply.toString());\r\n//                Log.d(TAG, \"onTick: \"+\"执行第\"+i+\"次请求：\"+videoReply.toString());\r\n                if (\"InitialString\".equals(videoReply.getCode())){\r\n                    String replyOriginalString = postVideoRequest(videoNum,1);\r\n                    Log.d(TAG, \"onTick: replyOriginalString\"+replyOriginalString);\r\n                    if(replyOriginalString!=null){\r\n                        //当请求数据不为空时，设置videoReply类，，，，，反序列化操作即 由字符串--->对象\r\n                        videoReply = JSON.parseObject(replyOriginalString, VideoReply.class);\r\n                        Log.d(TAG, \"返回: videoReply1：\"+videoReply.toString()+\"\\nvideoReply2：\"+videoReply2.toString());\r\n                        if(videoReply.getCode().equals(\"0030000\")){\r\n                            playVideo(videoNum);\r\n                            cancel();\r\n                        }else Toast.makeText(VideoMonitor.this,\"請求視頻失败！\",Toast.LENGTH_LONG).show();\r\n\r\n                    }\r\n                }\r\n            }\r\n            @Override\r\n            public void onFinish() {\r\n            }\r\n        }.start();}\r\n        else {//播放前视角视频时有四种情况\r\n            /*for(int i=2;i<6;i++){//for循環關閉其他線路\r\n                if(i!=videoNum)\r\n                    postVideoRequest(i,1);}*/\r\n            countDownTimer=new CountDownTimer(5000,1000) {\r\n                int i=0;\r\n                @Override\r\n                public void onTick(long millisUntilFinished) {\r\n                    i=i+1;\r\n                    Log.d(TAG, \"onTick: \"+\"执行第\"+i+\"次请求：原始\"+videoReply.getCode()+\"融合\"+videoReply2.getCode());\r\n                    if(\"0030000\".equals(videoReply.getCode())){//原始視頻已請求成功\r\n                        if(\"0030000\".equals(videoReply2.getCode())){//全部成功\r\n                            Log.d(TAG, i+\"onTick: videoReply1：\"+videoReply.toString()+\"\\nvideoReply2：\"+videoReply2.toString());\r\n                            onFinish();//對code的四種狀態進行判斷\r\n                            cancel();\r\n                        }\r\n                        else {//融合視頻未成功\r\n                            String replyMergeRetry=postVideoRequest(videoNum+6,1);\r\n                            if(replyMergeRetry!=null){\r\n                                videoReply2 = JSON.parseObject(replyMergeRetry, VideoReply.class);\r\n                                Log.d(TAG, \"onTick: 原始视频成功，融合失败\");}\r\n                        }\r\n                    }\r\n                    else {//原始視頻未成功\r\n                        if (\"0030000\".equals(videoReply2.getCode())){//融合视频成功\r\n\r\n                            String replyOriginalRetry = postVideoRequest(videoNum+1,1);\r\n                            if(replyOriginalRetry!=null){\r\n                                videoReply = JSON.parseObject(replyOriginalRetry, VideoReply.class);//繼續請求原始視頻\r\n                                Log.d(TAG, \"onTick: 融合视频成功，原始失败\");}\r\n\r\n                            }\r\n                        else {//均未成功\r\n                        String replyOriginalFront = postVideoRequest(videoNum+1,1);//VideoNum是0，请求的是原始视频1和融合视频6\r\n                        if(replyOriginalFront!=null){\r\n                            videoReply = JSON.parseObject(replyOriginalFront, VideoReply.class);\r\n                            Log.d(TAG, \"onTick: replyOriginalFront1\"+videoReply.toString());}\r\n\r\n                        String replyMergeFront=postVideoRequest(videoNum+6,1);//VideoNum是0，请求的是原始视频1和融合视频6\r\n                        Log.d(TAG, \"onTick: replyMergeFront\"+replyMergeFront);\r\n                        if(replyMergeFront!=null){\r\n                            videoReply2 = JSON.parseObject(replyMergeFront, VideoReply.class);//兩個視頻都請求\r\n                            Log.d(TAG, \"onTick: replyMergeFront1\"+videoReply2.toString());\r\n                        }}\r\n                    }\r\n                }\r\n\r\n                @Override\r\n                public void onFinish() {\r\n                    if(\"0030000\".equals(videoReply.getCode())){//原始視頻可用\r\n                        if (\"0030000\".equals(videoReply2.getCode())){\r\n                            Log.d(TAG, \"onFinish: 前视角与融合视频同时请求成功\");\r\n                            playVideo(0);//最理想情況，同時可播倆視頻\r\n                        }else{\r\n                            Toast.makeText(VideoMonitor.this,\"融合視頻不可用，播放原始視頻\",Toast.LENGTH_LONG).show();\r\n                            Log.d(TAG, \"onFinish: 融合視頻不可用，播放原始視頻\");\r\n                            playVideo(1);//融合視頻不可用，播放原始視頻\r\n                        }\r\n                    }\r\n                    else{//原始視頻不可用\r\n                        Toast.makeText(VideoMonitor.this,\"原始視頻不可用，播放融合視頻\",Toast.LENGTH_LONG).show();\r\n                        Log.d(TAG, \"onFinish: 原始視頻不可用，播放融合視頻\");\r\n                        if (\"0030000\".equals(videoReply2.getCode())){\r\n                            playVideo(6);//只播融合視頻\r\n                        }else{\r\n                            Toast.makeText(VideoMonitor.this,\"請求視頻失败！\",Toast.LENGTH_LONG).show();\r\n                        }\r\n                    }\r\n                }\r\n            }.start();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Post video request string\r\n     *\r\n     * @param videoNum    video num 视频类型\r\n     * @param serviceType service type 1表示打开，0表示关闭\r\n     * @return the string\r\n     */\r\n\r\n    public String postVideoRequest(final int videoNum, int serviceType){\r\n        videoRequest = new VideoRequest();\r\n        videoRequest.setUserId(\"6D\");\r\n        videoRequest.setVin(\"test\");\r\n        videoRequest.setVideo_type(Integer.toString(videoNum));\r\n        videoRequest.setServicetype(Integer.toString(serviceType));\r\n        final String videoRequestJson = JSON.toJSONString(videoRequest);//序列化\r\n        new Thread(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                try {\r\n                    Log.d(TAG, \"postVideoRequest: \"+videoRequestJson);\r\n                    OkHttpClient videoClient=new OkHttpClient();\r\n                    Request videoRequest= new Request.Builder()\r\n                            .url(hostURL+\"videoRequest\")\r\n                            .post(RequestBody.create(MediaType.parse(\"application/json\"),videoRequestJson))\r\n                            .build();//创造HTTP请求\r\n                    //执行发送的指令\r\n                    Response videoResponse = videoClient.newCall(videoRequest).execute();\r\n                    Log.d(TAG, \"run: 到了videoResponse\");\r\n                    if(videoNum!=6){\r\n                    videoResponseString=videoResponse.body().string();\r\n                        Log.d(TAG, \"run: videoResponseString:\"+videoResponseString);\r\n                    }\r\n                    else {\r\n                        mergeVideoString = videoResponse.body().string();\r\n                        Log.d(TAG, \"run: Merge\");\r\n                    }\r\n                    Log.d(TAG, \"run: 返回结果\"+videoNum+\"路视频：\\n\"+videoResponseString+\"\\n\"+mergeVideoString);\r\n\r\n                }catch (Exception e){\r\n                    e.printStackTrace();\r\n                    Log.d(\"POST失敗\", \"onClick: \"+e.toString());\r\n                    runOnUiThread(new Runnable() {\r\n                        @Override\r\n                        public void run() {\r\n                            Toast.makeText(VideoMonitor.this,\"請求視頻失败！\",Toast.LENGTH_LONG).show();\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        }).start();\r\n        Log.d(TAG, \"run: 返回结果\"+videoNum+\"路视频：\\n\"+videoResponseString);\r\n        if (videoNum!=6){\r\n        return videoResponseString;}\r\n        else return mergeVideoString;\r\n    }\r\n\r\n    public void playVideoUrl( String url){\r\n//      Toast.makeText(VideoMonitor.this, \"請求成功！\", Toast.LENGTH_SHORT).show();\r\n      player = new PlayerView(VideoMonitor.this, rootView)\r\n              //.setTitle(\"前摄像\")\r\n              .setProcessDurationOrientation(PlayStateParams.PROCESS_PORTRAIT)\r\n              .setScaleType(PlayStateParams.fillparent) //视频界面剪裁设置\r\n              .forbidTouch(false)\r\n              .hideSteam(true)\r\n              .hideMenu(true)\r\n              .hideCenterPlayer(false)\r\n              .setNetWorkTypeTie(false)\r\n              .hideRotation(true) //隐藏旋转按钮\r\n              .setChargeTie(true, 480)//设置最长播放时间\r\n              .showThumbnail(new OnShowThumbnailListener() {\r\n                  @Override\r\n                  public void onShowThumbnail(ImageView ivThumbnail) {\r\n//                                 加载前显示的缩略图\r\n                      Glide.with(mContext)\r\n                              .load(R.drawable.pic_before_video)//\"http://cn.bing.com/az/hprichbg/rb/Dongdaemun_ZH-CN10736487148_1920x1080.jpg\"\r\n                              .placeholder(R.drawable.pic_before_video) //加载成功之前占位图\r\n                              .error(R.color.cl_error)//加载错误之后的错误图\r\n                              .into(ivThumbnail);\r\n                  }\r\n              })\r\n             .setPlaySource(url)\r\n              .startPlay();\r\n    }\r\n\r\n    public void playVideo(int videoNum){\r\n        if(videoPlayingNum==videoNum)return;\r\n\r\n        switch (videoNum){\r\n            case 0:\r\n                //前视角原始视频与融合视频在一个按钮，通过视频窗口内部按钮切换\r\n                Toast.makeText(VideoMonitor.this,\"請求成功！\",Toast.LENGTH_SHORT).show();\r\n                list = new ArrayList<VideoijkBean>();\r\n                //有部分视频加载有问题，这个视频是有声音显示不出图像的，没有解决http://fzkt-biz.oss-cn-hangzhou.aliyuncs.com/vedio/2f58be65f43946c588ce43ea08491515.mp4\r\n                //这里模拟一个本地视频的播放，视频需要将testvideo文件夹的视频放到安卓设备的内置sd卡根目录中\r\n                String url1 = \"rtmp://150.158.176.170/live/test_vin_1\";//\"rtmp://150.158.176.170/live/1\";\r\n                String url2 = \"rtmp://150.158.176.170/live/test_vin_6\";\r\n                VideoijkBean m1 = new VideoijkBean();\r\n                m1.setStream(\"原始视频\");\r\n                m1.setUrl(url1);\r\n                VideoijkBean m2 = new VideoijkBean();\r\n                m2.setStream(\"融合视频\");\r\n                m2.setUrl(url2);\r\n                list.add(m1);\r\n                list.add(m2);\r\n                player = new PlayerView(this, rootView) {\r\n                    @Override\r\n                    public PlayerView setPlaySource(List<VideoijkBean> list) {\r\n                        return super.setPlaySource(list);\r\n                    }\r\n                }\r\n                        //.setTitle(\"前摄像\")\r\n                        .setProcessDurationOrientation(PlayStateParams.PROCESS_PORTRAIT)\r\n                        .setScaleType(PlayStateParams.fillparent) //视频界面剪裁设置\r\n                        .forbidTouch(false)\r\n                        .hideSteam(false)\r\n                        .hideMenu(true)\r\n                        .hideCenterPlayer(true)\r\n                        .setNetWorkTypeTie(false)\r\n                        .hideRotation(true) //隐藏旋转按钮\r\n                        .setChargeTie(true,480)//设置最长播放时间\r\n                        .showThumbnail(new OnShowThumbnailListener() {\r\n                            @Override\r\n                            public void onShowThumbnail(ImageView ivThumbnail) {\r\n//                                 加载前显示的缩略图\r\n                                Glide.with(mContext)\r\n                                        .load(R.drawable.pic_before_video)//\"http://cn.bing.com/az/hprichbg/rb/Dongdaemun_ZH-CN10736487148_1920x1080.jpg\"\r\n                                        .placeholder(R.drawable.pic_before_video) //加载成功之前占位图\r\n                                        .error(R.color.cl_error)//加载错误之后的错误图\r\n                                        .into(ivThumbnail);\r\n                            }\r\n                        })\r\n                        .setPlaySource(list)\r\n                        .startPlay();\r\n                break;\r\n            case 1:\r\n                //只播原始視頻\r\n                playVideoUrl(\"rtmp://150.158.176.170/live/test_vin_1\");\r\n                break;\r\n            case 2:\r\n                //后视角\r\n                playVideoUrl(\"rtmp://150.158.176.170/live/test_vin_2\");\r\n                break;\r\n            case 3:\r\n                //左视角\r\n                playVideoUrl(\"rtmp://150.158.176.170/live/test_vin_3\");\r\n                break;\r\n            case 4:\r\n                //右视角\r\n                playVideoUrl(\"rtmp://150.158.176.170/live/test_vin_4\");\r\n                break;\r\n            case 5:\r\n                //上帝视角\r\n                playVideoUrl(\"rtmp://150.158.176.170/live/test_vin_5\");\r\n                break;\r\n            case 6:\r\n                //只有融合視頻\r\n                playVideoUrl(\"rtmp://150.158.176.170/live/test_vin_6\");\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n        videoPlayingNum=videoNum;\r\n    }\r\n\r\n\r\n    @OnClick({R.id.light})\r\n    public void onClick(View view) {\r\n        switch (view.getId()) {\r\n            case R.id.light:\r\n                {   \r\n//                    requestTextView.setText(\"請求開燈/關燈\");\r\n                    }\r\n            break;\r\n\r\n        }\r\n    }\r\n\r\n\r\n    @Override\r\n    protected void onPause() {\r\n        super.onPause();\r\n        if (player != null) {\r\n            player.onPause();\r\n        }\r\n        /**demo的内容，恢复系统其它媒体的状态*/\r\n        MediaUtils.muteAudioFocus(mContext, true);\r\n    }\r\n\r\n\r\n    @Override\r\n    protected void onResume() {\r\n        super.onResume();\r\n        if (player != null) {\r\n            player.onResume();\r\n        }\r\n        /**demo的内容，暂停系统其它媒体的状态*/\r\n        MediaUtils.muteAudioFocus(mContext, false);\r\n        /**demo的内容，激活设备常亮状态*/\r\n        if (wakeLock != null) {\r\n            wakeLock.acquire();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onDestroy() {\r\n        super.onDestroy();\r\n        if (player != null) {\r\n            player.onDestroy();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onConfigurationChanged(Configuration newConfig) {\r\n        super.onConfigurationChanged(newConfig);\r\n        if (player != null) {\r\n            player.onConfigurationChanged(newConfig);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        if (player != null && player.onBackPressed()) {\r\n            return;\r\n        }\r\n        super.onBackPressed();\r\n        /**demo的内容，恢复设备亮度状态*/\r\n        if (wakeLock != null) {\r\n            wakeLock.release();\r\n        }\r\n    }\r\n\r\n\r\n    @Override\r\n    public void onCheckedChanged(MyRadioGroup group, int checkedId) {\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/dou361/jjdxm_ijkplayer/videomonitoring/VideoMonitor.java	(revision 0a79339a31be5764438e7c12d5dc21790fd30f39)
+++ app/src/main/java/com/dou361/jjdxm_ijkplayer/videomonitoring/VideoMonitor.java	(date 1618902242956)
@@ -8,6 +8,7 @@
 import android.os.CountDownTimer;
 import android.os.PowerManager;
 import android.util.Log;
+import android.view.LayoutInflater;
 import android.view.SurfaceHolder;
 import android.view.SurfaceView;
 import android.view.View;
@@ -68,7 +69,8 @@
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         this.mContext = this;
-        rootView = getLayoutInflater().from(this).inflate(R.layout.activity_videomonitor, null);
+        getLayoutInflater();
+        rootView = LayoutInflater.from(this).inflate(R.layout.activity_videomonitor, null);
         setContentView(rootView);
         ButterKnife.bind(this);
 
@@ -175,7 +177,9 @@
                         if(videoReply.getCode().equals("0030000")){
                             playVideo(videoNum);
                             cancel();
-                        }else Toast.makeText(VideoMonitor.this,"請求視頻失败！",Toast.LENGTH_LONG).show();
+                        }else {
+                            Toast.makeText(VideoMonitor.this,"請求視頻失败！",Toast.LENGTH_LONG).show();
+                        }
 
                     }
                 }
@@ -310,7 +314,9 @@
         Log.d(TAG, "run: 返回结果"+videoNum+"路视频：\n"+videoResponseString);
         if (videoNum!=6){
         return videoResponseString;}
-        else return mergeVideoString;
+        else {
+            return mergeVideoString;
+        }
     }
 
     public void playVideoUrl( String url){
@@ -342,7 +348,9 @@
     }
 
     public void playVideo(int videoNum){
-        if(videoPlayingNum==videoNum)return;
+        if(videoPlayingNum==videoNum) {
+            return;
+        }
 
         switch (videoNum){
             case 0:
Index: app/version.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#Thu Apr 15 10:15:00 CST 2021\r\nVERSION_CODE=4120228\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/version.properties	(revision 0a79339a31be5764438e7c12d5dc21790fd30f39)
+++ app/version.properties	(date 1619058337963)
@@ -1,2 +1,2 @@
-#Thu Apr 15 10:15:00 CST 2021
-VERSION_CODE=4120228
+#Thu Apr 22 10:25:37 CST 2021
+VERSION_CODE=4120269
