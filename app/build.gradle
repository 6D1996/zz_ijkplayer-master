import java.text.SimpleDateFormat

apply plugin: 'com.android.application'

Properties props = new Properties()
props.load(new FileInputStream(file(rootProject.file("signing.properties"))))

def getVersionCode() {// 获取版本号
    def versionFile = file('version.properties')// 读取第一步新建的文件
    if (versionFile.canRead()) {// 判断文件读取异常
        Properties versionProps = new Properties()
        versionProps.load(new FileInputStream(versionFile))
        def versionCode = versionProps['VERSION_CODE'].toInteger()// 读取文件里面的版本号
        versionProps['VERSION_CODE'] = (++versionCode).toString()
        SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");//设置日期格式
        System.out.println(df.format(new Date()));// new Date()为获取当前系统时间
        versionProps.store(versionFile.newWriter(), null)
        return df.format(new Date()) // 返回自增之后的版本号
    } else {
        throw new GradleException("Could not find version.properties!")
    }
}

android {
    signingConfigs {
        release {
            keyAlias props['signing.alias']
            keyPassword props['signing.password']
            storeFile file(rootProject.file("debug.keystore"))
            storePassword props['signing.password']
        }

        debug {
            keyAlias props['signing.jjdxm_alias']
            keyPassword props['signing.jjdxm_password']
            storeFile file(rootProject.file("debug.keystore"))
            storePassword props['signing.jjdxm_password']
        }
    }

    compileSdkVersion 30
    def currentVersionCode = getVersionCode().toString()

    defaultConfig {
        applicationId "com.dou361.jjdxm_ijkplayer"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode getVersionCode()
        versionName currentVersionCode

        vectorDrawables.useSupportLibrary = true

        ndk {
            abiFilters "armeabi-v7a", "armeabi", "x86", "armeabi-v8a"//自4.8.8版本开始支持arm64-v8a，按需使用
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    buildTypes {

        debug {
            signingConfig signingConfigs.debug
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'



    testImplementation 'junit:junit:4.13.1'
    implementation rootProject.ext.jjdxm_v7
    implementation 'com.jakewharton:butterknife:7.0.1'
    implementation 'com.github.bumptech.glide:glide:3.7.0'
    implementation project(':jjdxm-ijkplayer')
/*萤石SDK核心模块，必须依赖*/
    implementation 'com.ezviz.sdk:ezviz-sdk:4.16.1'

    /*视频通话模块，按需使用*/
    implementation 'com.ezviz.sdk:videotalk:1.2.0'

    /*码流获取模块，按需使用*/
    implementation 'com.ezviz.sdk:streamctrl:1.2.0'
//    根据需要支持去拓展，在jjdxm-ijkplayer中默认加入了armv7a的了
    implementation 'tv.danmaku.ijk.media:ijkplayer-java:0.8.8'
    implementation 'tv.danmaku.ijk.media:ijkplayer-armv7a:0.8.8'
    implementation 'tv.danmaku.ijk.media:ijkplayer-arm64:0.8.8'
    implementation 'tv.danmaku.ijk.media:ijkplayer-x86:0.8.8'
    implementation 'tv.danmaku.ijk.media:ijkplayer-x86_64:0.8.8'


    //网络获取直播视频
    implementation 'com.squareup.retrofit2:retrofit:2.0.0-beta4'
    implementation 'com.squareup.retrofit2:converter-scalars:2.0.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.0.0-beta4'
    implementation 'com.squareup.okhttp3:okhttp:4.9.0'
    implementation 'com.alibaba:fastjson:1.2.74'
    implementation project(':hub-device-android:iot_core')
    implementation project(':hub-device-android:iot_service')
    //implementation project(':hub-device-android:hub-demo')
    implementation project(':hub-device-java')
    implementation "org.eclipse.paho:org.eclipse.paho.client.mqttv3"
    implementation "org.java-websocket:Java-WebSocket:1.3.0"

//    implementation 'com.tencent.iot.hub:hub-device-android-core:3.2.0'
//    implementation 'com.tencent.iot.hub:hub-device-android-service:3.2.0'








}
